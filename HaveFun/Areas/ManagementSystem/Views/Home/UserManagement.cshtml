
<div id="UserManagementApp" class="container row  p-5 pt-5 text-center border-2 m-auto">
	<h1>檢舉個人資料管理</h1>
	<hr />
	<div class="col-12">
		<span class="col-12 col-md-2  m-2 ">處理狀態示意顏色: </span>
		<label class="text-bg-warning  col-12 col-md-2  m-2">申訴中</label>
		<label class="text-bg-secondary col-12 col-md-2  m-2">已封鎖</label>
		<label class="text-bg-success col-12 col-md-2  m-2">無須封鎖</label>
	</div>
	
	<hr />
	<div class="table-responsive">
		<table class="table table-secondary">
			<thead>
				<tr>
					<th scope="col">被檢舉人Id</th>
					<th scope="col">檢舉人Id</th>
					<th scope="col">檢舉項目</th>
					<th scope="col">檢舉時間</th>
					<th scope="col">處理按鈕</th>
					


				</tr>
			</thead>
			<tbody>
				<tr v-for="r in reviews.slice(tableStart,tableEnd)" class="">
					<td>{{r.beReportedUserId}}</td>
					<td>{{r.reportUserId}}</td>
					<td>{{this.ComplaintToString(r.complaintCategoryId)}}</td>
					<td>{{this.TimeSplit(r.reportTime)}}</td>
					<td>
						<button class="btn " 
							:class="btnColor(r.status)"
								@@click="UserCheck(r.beReportedUserId,r.id)">
							{{this.ReviewStatusToString(r.status)}}
						</button>
					</td>
					
				</tr>

			</tbody>
		</table>
	</div>
	<div>
		<button class="btn btn-secondary m-3" @@click="UpperFive()">上五筆</button>
		<button class="btn btn-secondary m-3" @@click="LowerFive()">下五筆</button>
	</div>

	<template v-if="reviews.length==0"><h1>沒有被檢舉資料</h1> </template>

	<div class="  text-light bg-secondary">
		<label>檢舉項目:</label> <br />
		<label v-for="c in complaint" class="form-label col-12 col-md-2 col-sm-6">{{c.complaintCategoryId}} . {{c.complaintCategoryName}}</label>
	</div>

	<div class="modal fade"
		 id="UserModal"
		 tabindex="-1"
		 data-bs-backdrop="static"
		 data-bs-keyboard="false"
		 role="dialog"
		 aria-labelledby="modalTitleId"
		 aria-hidden="true">
		<div class="modal-dialog modal-dialog-scrollable modal-dialog-centered "
			 role="document" style="width:450px">
			<div class="modal-content">
				<div class="modal-header "style="background-color:coral;">
					<span style="width:150px;"></span>
					<h5 class="modal-title " id="modalTitleId"  >
						檢舉使用者
					</h5>
					<button type="button"
							class="btn-close"
							data-bs-dismiss="modal"
							aria-label="Close">
					</button>
				</div>
				<div class="modal-body row lh-lg ">
					<div >
						<label class="col-4 text-decoration-underline">
							被檢舉人名稱:
						</label>
						<label class="col-8 text-start">
							{{userInfos.name}}
						</label>
						<label class="col-4 text-decoration-underline">
							被檢舉人性別:
						</label>
						<label class="col-8 text-start">
							{{gender(userInfos.gender)}}
						</label>
						<label class="col-4 text-decoration-underline">
							被檢舉人介紹:
						</label>
						<label class="col-8 text-start">
							{{userInfos.introduction}}
						</label>
						<label class="col-4 text-decoration-underline">
							被檢舉人帳號:
						</label>
						<label class="col-8 text-start">
							{{userInfos.account}}
						</label>
						<label class="col-4 text-decoration-underline">
							被檢舉人地址:
						</label>
						<label class="col-8 text-start">
							{{userInfos.address}}
						</label>
						<label class="col-4 text-decoration-underline">
							被檢舉人電話:
						</label>
						<label class="col-8 text-start">
							{{userInfos.phoneNumber}}
						</label>
						<label class="col-4 text-decoration-underline">
							被檢舉人生日:
						</label>
						<label class="col-8 text-start">
							{{this.TimeSplit(userInfos.birthDay)}}
						</label>
						<label class="col-4 text-decoration-underline">
							被檢舉人註冊時間:
						</label>
						<label class="col-8 text-start">
							{{userInfos.registrationDate}}
						</label>

					</div>

					<div>
						<label class="col-4 text-decoration-underline">
							被檢舉人圖片:
						</label>
						<img class="col-12 img-fluid" :src="imgSrc(userInfos.profilePicture)" />

					</div>
					<div>
						<label class="col-4 text-decoration-underline">
							封鎖狀態:
						</label>
						<label class="col-8 text-start ">
							{{this.UserStatusToString(userInfos.status)}}
						</label>

					</div>
				</div>
				<div class="modal-footer">
					<button type="button"
							class="btn btn-secondary "
							data-bs-dismiss="modal"
							@@click="changeUserStatus(userInfos.id,0),
									changeReviewState(this.UserReviewid,2)">
						駁回檢舉
					</button>
					<button type="button" 
						@@click="changeUserStatus(userInfos.id,1) ,
								changeReviewState(this.UserReviewid,1)"
					class="btn btn-danger">
						封鎖使用者
					</button>
				</div>
			</div>
		</div>
	</div>

</div>

@section Scripts {

	
	<script>
		var App = Vue.createApp({
			data() {
				return {
					reviews: [],
					tableStart: 0,
					tableEnd: 5,
					userInfos: [],
					complaint: [],
					UserReviewid: 0,
					baseAdress: "",		/*"https://localhost:7152" */
					// complaintArr:[],
				};
			},
			methods: {
				gender(type) {
					if (type == 0) { return "男"; }
					else if (type == 1) { return "女"; }
					else { return "不男不女"; }
				},
				imgSrc(src) {
					if (src == null || src == "null" || src == "")
						return "/images/NOimg.jpg"
					else
						return src.substr(18);
				},
				UserCheck(UserId,ReviewId) {
					this.showModal();
					this.getUserInfo(UserId);
					this.UserReviewid = ReviewId;
				},
				getUserInfo(userid) {
					axios.get(`${this.baseAdress}/api/UserInfo/GetById/${userid}`
					).then(r => r.data).then(d => App.userInfos = d);
				},
				showModal() {
					$("#UserModal").modal("show");
				},
				hideModal() {
					$("#UserModal").modal("hide");
				},
				getAllReview() {
					axios.get(`${this.baseAdress}/api/userReview/GetAll`).then(r => r.data).then(r => App.reviews = r);
				},
				changeUserStatus(UserId, state) {

					axios.put(`${this.baseAdress}/api/UserInfo/ChangeUserState?id=${UserId}`,
						{
							"id": UserId,
							"status": state,
						}

					).then(r => r.data).then(d => console.log(d));
					this.hideModal();
					this.userInfos = [];
					
				},
				changeReviewState(ReviewId,state) {
					axios.put(`${this.baseAdress}/api/userReview/ChangeReviewState?id=${ReviewId}`, {
						"id": ReviewId,
						"status": state,
					})
					.then(r => r.data)
					.then(d => console.log(d))
					.then(d => this.getAllReview());
				},
				UpperFive() {
					if (this.tableStart > 0) {
						this.tableStart -= 5;
						this.tableEnd -= 5;
					}
					else {
						//alert("已經是第一頁")
					}
				},
				LowerFive() {
					if (this.tableEnd < this.reviews.length) {
						this.tableStart += 5;
						this.tableEnd += 5;
					}
					else {
						//alert("已經是最後一頁")
					}
				},
				btnColor(id) {
					if (id == 0) { return "btn-warning"; }
					if (id == 1) { return "btn-secondary "; }
					if (id == 2) { return "btn-success"; }

				},
				getComplaintItem() {	//get檢舉項目清單
					fetch(`${this.baseAdress}/api/complaint/Getall`, { method: "GET" }).then(r => r.json()).then(d => App.complaint = d);
				},
				ReviewStatusToString(s) {
					if (s == 0) { return "申訴中"; }
					else if (s == 1) { return "已封鎖"; }
					else { return "無須封鎖"; }
				},
				UserStatusToString(s) {
					if (s == 0) { return "未封鎖"; }
					else { return "已封鎖"; }
				},
				ComplaintToString(id) {
					if (this.complaint.length != 0)
						return this.complaint[parseInt(id) - 1].complaintCategoryName
					else
						return "null";
				},
				TimeSplit(timeStr) {
					if (timeStr != null) {
						var timeArr = timeStr.split('T').join('-').split('-').join(':').split(":");
						return `${timeArr[0]}年 ${timeArr[1]}月 ${timeArr[2]}日 ${timeArr[3]}時 ${timeArr[4]}分`;
					}
				},
			},
			Computed: {
				
			
			},
			mounted() {
				this.getAllReview();
				this.getComplaintItem();
			},
		}).mount("#UserManagementApp");
	</script>

}