@model HaveFun.ViewModels.ActivityViewModel
<link href="~/assets/css/profile_activitiesmanagement.css" rel="stylesheet" />
<div class="tab-pane fade" id="gt3" role="tabpanel" aria-labelledby="gt3-tab">
	<div id="activityPlatform">
		<ul class="tags lab-ul justify-content-center">
			<li>
				<button class="default-btn" @@click="switchType('commingup')">{{ buttonText('commingup', '即將舉辦活動') }}</button>
			</li>
			<li>
				<button class="default-btn" @@click="switchType('host')">{{ buttonText('host', '修改主辦活度內容') }}</button>
			</li>
			<li>
				<button class="default-btn" @@click="switchType('past')">{{ buttonText('past', '已結束的活動') }}</button>
			</li>
		</ul>
		<!-- 彈出視窗們 -->
		<!-- 取消參加活動視窗 -->
		<div class="canelAttendBox">
			<span>確定要退出活動嗎？</span><br><br>
			<button class="btn btn-danger" @@click="cancelAttendActivity">是</button>
			<button class="btn btn-outline-secondary" @@click="escCancelAttendBox">否</button>
		</div>
		<!-- 刪除活動視窗 -->
		<div class="deleteActBox">
			<span>確定要刪除活動嗎？</span><br><br>
			<button class="btn btn-danger" @@click="deleteActivity">是</button>
			<button class="btn btn-outline-secondary" @@click="escdeleteActBox">否</button>
		</div>
		<!-- ================> 即將發生的活動 <================== -->
		<div v-if="currentType === 'commingup'" v-for="act in commingupActivities" class="blog__item">
			<div class="blog__inner">
				<div class="blog__content">
					<img src="assets/images/blog/10.jpg" alt="blog">
					<h3>{{act.title}}</h3>
					<ul class="lab-ul blog__date">
						<li><span><i class="fa-solid fa-calendar-days"></i> 活動時間：{{act.activityTime}} </span></li>
						<li><span><i class="fa-solid fa-user"></i> 主辦者：{{act.host}}</span> </li>
						<li><span><i class="fa-solid fa-users"></i> {{act.participant.length}} 位參加者</span></li>
						<li><span><i class="fa-solid fa-map-location-dot"></i> 活動地點：{{act.location}}</span></li>
					</ul>
					<details @@toggle="act.expandState = !act.expandState">
						<summary>{{act.expandState? '隱藏詳細內容' : '展開詳細內容'}}</summary>
						<div class="col-xs-2">
							<span class="infoTitle">活動類型：</span>
							{{act.type}}<br>
							<span class="infoTitle">活動開始報名時間：</span>
							{{act.registrationTime}}<br>
							<span class="infoTitle">活動報名截止時間：</span>
							{{act.deadlineTime}}<br>
							<span class="infoTitle">活動費用：</span>
							{{act.amount}}元<br>
							<span class="infoTitle">報名人數上限：</span>
							{{act.max}}<br>
							<span class="infoTitle">活動內容：</span><br>
							{{act.content}}<br>
							<span class="infoTitle">注意事項：</span><br>
							{{act.notes}}<br><br>
							<!-- Host與登入會員不相同才有取消參加活動按鈕 -->
							<button v-if="act.hostId != loginUserId" class="default-btn" id="cancelAttend" @@click="showCancelAttend(act.id)">
								取消參加活動
							</button>
						</div>
					</details>
				</div>
			</div>
		</div>
		<div v-if="currentType === 'commingup' && commingupActivities.length === 0">
			<p class="empty">目前沒有即將發生的活動</p>
		</div>
		<!-- ================> 編輯主辦活動內容 <================== -->
		<div v-if="currentType === 'host'" v-for="act in hostActivities" class="blog__item">
			<div class="blog__inner">
				<div v-if="act.inEdit === false" class="blog__content">
					<img src="assets/images/blog/10.jpg" alt="blog">
					<h3>{{act.title}}</h3>
					<ul class="lab-ul blog__date">
						<li><span><i class="fa-solid fa-calendar-days"></i> 活動時間：{{act.activityTime}} </span></li>
						<li><span><i class="fa-solid fa-user"></i> 主辦者：{{act.host}}</span> </li>
						<li><span><i class="fa-solid fa-users"></i> {{act.participant.length}} 位參加者</span></li>
						<li><span><i class="fa-solid fa-map-location-dot"></i> 活動地點：{{act.location}}</span></li>
					</ul>
					<details @@toggle="act.expandState = !act.expandState">
						<summary>{{act.expandState? '隱藏詳細內容' : '展開詳細內容'}}</summary>
						<div>
							<span class="infoTitle">活動類型：</span>
							{{act.type}}<br>
							<span class="infoTitle">活動開始報名時間：</span>
							{{act.registrationTime}}<br>
							<span class="infoTitle">活動報名截止時間：</span>
							{{act.deadlineTime}}<br>
							<span class="infoTitle">活動費用：</span>
							{{act.amount}}元<br>
							<span class="infoTitle">報名人數上限：</span>
							{{act.max}}<br>
							<span class="infoTitle">活動內容：</span><br>
							{{act.content}}<br>
							<span class="infoTitle">注意事項：</span><br>
							{{act.notes}}<br><br>
							<button class="default-btn" @@click="showDeleteAct(act.id)">刪除活動</button>
							<button class="default-btn" @@click="intoEditing(act)">修改活動內容</button>
						</div>
					</details>
				</div>
				<!-- 編輯活動內容 -->
				<div v-if="act.inEdit === true" class="blog__content">
					<form>
					<img src="assets/images/blog/10.jpg" class="imgPreview"><br>
					<input type="file" v-model="EditPic" @@change="previewPic" accept="image/*">
					<button v-if="editPic != null" @@click="removeEditPic">移除</button><br>
					<span> 活動名稱：</span>
					<input :class="['form-control',{'is-invalid':errorStyle.title}]" maxlength="50" v-model="editTitle">
					<div class="invalid-feedback">活動標題為必填</div>
					<span>活動時間：</span>
					<input :class="['form-control',{'is-invalid':errorStyle.activityTime}]" type="datetime-local" v-model="editActivityTime">
					<div class="invalid-feedback">請輸入有效時間</div>
					<span> 活動地點：</span>
					<input :class="['form-control',{'is-invalid':errorStyle.location}]"  maxlength="200" v-model="editLocation">
					<div class="invalid-feedback">活動地點為必填</div>
					<span>活動類型：</span>
					<select :class="['form-control',{'is-invalid':errorStyle.type}]" id="inputState" v-model="editActType">
					<option selected value=0 >CHOOSE....</option>
					<option v-for="type in activitiyType" :value="type.id">{{type.typeName}}</option>
					</select>
					<div class="invalid-feedback">請選擇活動類別</div>
					<span>活動開始報名時間：</span>
					<input :class="['form-control',{'is-invalid':errorStyle.registrationTime}]" type="datetime-local" v-model="editRegistrationTime">
					<div class="invalid-feedback">請輸入有效時間</div>
					<span>活動報名截止時間：</span>
					<input :class="['form-control',{'is-invalid':errorStyle.deadlineTime}]" type="datetime-local" v-model="editDeadlineTime">
					<div class="invalid-feedback">請輸入有效時間</div>
					<span>活動費用：</span><br>
					<input type="number" :class="['form-control',{'is-invalid':errorStyle.amount}]" v-model="editAmount">　元<br>
					<div class="invalid-feedback">請輸入有效數字</div>
					<span>報名人數上限：</span><br>
					<input type="number" :class="['form-control',{'is-invalid':errorStyle.max}]" v-model="editMax"><br>
					<div class="invalid-feedback">請輸入有效數字</div>
					<span>活動內容：</span><br>
					<textarea :class="['form-control',{'is-invalid':errorStyle.content}]" maxlength="1000" v-model="editActContent"></textarea>
					<div class="invalid-feedback">活動內容為必填</div>
					<span>注意事項：</span><br>
					<textarea :class="['form-control',{'is-invalid':errorStyle.note}]" maxlength="1000" v-model="editNote"></textarea>
					<div class="invalid-feedback">注意事項為必填</div>
					<br><br>
					<button class="btn btn-outline-secondary" @@click="cancelToEdit(act)">取消修改</button>&nbsp;
					<button type="submit" class="default-btn" @@click="editActivity(act)">確定修改</button>
					</form>
				</div>
			</div>
		</div>
		<div v-if="currentType === 'host' && hostActivities.length === 0">
			<p class="empty">目前沒有主辦活動可以顯示</p>
		</div>
		<!-- ================> 已經結束的活動 <================== -->
		<div v-if="currentType === 'past'" v-for="act in pastActivities" class="blog__item">
			<div class="blog__inner">
				<div class="blog__content">
					<img src="assets/images/blog/10.jpg" alt="blog">
					<h3>{{act.title}}</h3>
					<ul class="lab-ul blog__date">
						<li><span><i class="fa-solid fa-calendar-days"></i> 活動時間：{{act.activityTime}} </span></li>
						<li><span><i class="fa-solid fa-user"></i> 主辦者：{{act.host}}</span> </li>
						<li><span><i class="fa-solid fa-users"></i> {{act.participant.length}} 位參加者</span></li>
						<li><span><i class="fa-solid fa-map-location-dot"></i> 活動地點：{{act.location}}</span></li>
					</ul>
					<details @@toggle="act.expandState = !act.expandState">
						<summary>{{act.expandState? '隱藏詳細內容' : '展開詳細內容'}}</summary>
						<div>
							<span class="infoTitle">活動類型：</span>
							{{act.type}}<br>
							<span class="infoTitle">活動費用：</span>
							{{act.amount}}元<br>
							<span class="infoTitle">報名人數上限：</span>
							{{act.max}}<br>
							<span class="infoTitle">活動內容：</span><br>
							{{act.content}}<br>
							<span class="infoTitle">注意事項：</span><br>
							{{act.notes}}
						</div>
					</details>
				</div>
			</div>
		</div>
		<div v-if="currentType === 'past' && pastActivities.length === 0">
			<p class="empty">目前沒有歷史活動可以顯示</p>
		</div>
	</div>
</div>
<script>
	const activityPlatform = Vue.createApp({
		data() {
			return {
				baseAddress: window.location.origin,
				loginUserId: @ViewBag.UserId,
				currentType: "commingup",
				commingupActivities: [],
				hostActivities: [],
				pastActivities: [],
				activitiyType: [],
				wannaEdit:0,
				editPic:null,
				editTitle:'',
				editActivityTime:'',
				editLocation:'',
				editActType: 0,
				editRegistrationTime:'',
				editDeadlineTime:'',
				editAmount:0,
				editMax:0,
				editActContent: '',
				editNote:'',
				waitingToCancel: 0,
				waitingToDelete: 0,
				errorStyle: {
					title: false,
					location: false,
					content: false,
					note: false,
					activityTime: false,
					registrationTime: false,
					deadlineTime: false,
					amount: false,
					max: false,
					type: false
				},
				currentDateTime: new Date().toISOString().slice(0, 16),
				min: 0,
			}
		},
		watch: {
			hasTitle(newVal, oldVal) {
				this.errorStyle.title = !newVal;
			},
			hasLocation(newVal, oldVal) {
				this.errorStyle.location = !newVal;
			},
			hasContent(newVal, oldVal) {
				this.errorStyle.content = !newVal;
			},
			hasNote(newVal, oldVal) {
				this.errorStyle.note = !newVal;
			},
			validActivityTime(newVal, oldVal) {
				this.errorStyle.activityTime = !newVal;
			},
			validRegistrationTime(newVal, oldVal) {
				this.errorStyle.registrationTime = !newVal;
			},
			validDeadlineTime(newVal, oldVal) {
				this.errorStyle.deadlineTime = !newVal;
			},
			validAmount(newVal, oldVal) {
				this.errorStyle.amount = !newVal;
			},
			validMax(newVal, oldVal) {
				this.errorStyle.max = !newVal;
			},
			validType(newVal, oldVal) {
				this.errorStyle.type = !newVal;
			},
		},
		computed: {
			hasTitle(){
				return this.editTitle != '';
			},
			hasLocation() {
				return this.editLocation != '';
			},
			hasContent() {
				return this.editActContent != '';
			},
			hasNote() {
				return this.editNote != '';
			},
			validActivityTime() {
				return this.editActivityTime > this.currentDateTime;
			},
			validRegistrationTime() {
				return this.editRegistrationTime > this.currentDateTime;
			},
			validDeadlineTime() {
				return this.editDeadlineTime > this.currentDateTime;
			},
			validAmount() {
				return this.editAmount >= this.min;
			},
			validMax() {
				return this.editMax > this.min;
			},
			validType() {
				return this.editActType > this.min;
			}
		},
		methods: {
			//取得登入者即將發生活動
			getCommingupList(userId) {
				fetch(`api/personalActivities/GetCommingupActivities/${this.loginUserId}`)
					.then(res => res.json())
					.then(data => {
						this.commingupActivities = data.map(activity => ({
							...activity,
							expandState: false
						}));
					})
					.catch(error => { console.log('fetch commingupActivities failed!') });
			},
			//取得登入者主辦活動
			getHostList(userId) {
				fetch(`api/personalActivities/GetHostActivities/${this.loginUserId}`)
					.then(res => res.json())
					.then(data => {
						this.hostActivities = data.map(activity => ({
							...activity,
							expandState: false,
							inEdit: false
						}));
					})
					.catch(error => { console.log('fetch hostActivities failed!') });
			},
			//取得已結束活動
			getPastList(userId) {
				fetch(`api/personalActivities/GetPastActivities/${this.loginUserId}`)
					.then(res => res.json())
					.then(data => {
						this.pastActivities = data.map(activity => ({
							...activity,
							expandState: false
						}));
					})
					.catch(error => { console.log('fetch pastActivities failed!') });
			},
			//取得所有活動類型
			getActivityTypeList() {
				fetch(`api/personalActivities/GetActivityType`)
					.then(res => res.json())
					.then(data => {
						this.activitiyType = data;
					})
					.catch(error => { console.log('fetch activityType failed!') });
			},
			//切換狀態顯示活動
			switchType(type) {
				this.currentType = type;
			},
			buttonText(type, text) {
				return this.currentType === type ? '● ' + text : text;
			},
			//顯示退出活動視窗
			showCancelAttend(id) {
				event.preventDefault();
				$('.canelAttendBox').css("display", "block");
				this.waitingToCancel = id;
			},
			//取消刪除貼文視窗
			escCancelAttendBox() {
				event.preventDefault();
				$('.canelAttendBox').css("display", "none");
				this.waitingToCancel = 0;
			},
			//取消參加活動
			cancelAttendActivity() {
				event.preventDefault();
				let request = {
					"Id": 0,
					"ActivityId": this.waitingToCancel,
					"UserId": this.loginUserId
				};
				fetch(`api/personalActivities/NotAttending`, {
					method: 'DELETE',
					headers: {
						"Content-Type": "application/json"
					},
					body: JSON.stringify(request)
				})
					.then(response => response.json())
					.then(data => {
						console.log(data);
						this.getCommingupList(this.loginUserId);
					})
					.catch(error => {
						console.log('fetch cancel attend activity failed!', error)
					});
				$('.canelAttendBox').css("display", "none");
			},
			//顯示刪除活動視窗
			showDeleteAct(id) {
				event.preventDefault();
				$('.deleteActBox').css("display", "block");
				this.waitingToDelete = id;
			},
			//取消顯示刪除活動視窗
			escdeleteActBox() {
				event.preventDefault();
				$('.deleteActBox').css("display", "none");
				this.waitingToDelete = 0;
			},
			//刪除活動
			deleteActivity() {
				event.preventDefault();
				fetch(`api/personalActivities/DeleteActivity/${this.waitingToDelete}`, {
					method: 'PUT',
					headers: {
						"Content-Type": "application/json"
					}
				})
					.then(response => response.json())
					.then(data => {
						console.log(data);
						this.getCommingupList(this.loginUserId);
						this.getHostList(this.loginUserId);
					})
					.catch(error => {
						console.log('fetch delete activity failed!', error)
					});
				$('.deleteActBox').css("display", "none");
			},
			//進入修改活動畫面
			intoEditing(act) {
				act.inEdit = true;
				this.wannaEdit = act.id;
				this.editTitle = act.title;
				this.editActivityTime = act.activityTime;
				this.editLocation = act.location;
				this.editActType = act.type;
				this.editRegistrationTime = act.registrationTime;
				this.editDeadlineTime = act.deadlineTime;
				this.editAmount = act.amount;
				this.editMax = act.max;
				this.editActContent = act.content;
				this.editNote = act.notes;
			},
			//取消修改活動內容
			cancelToEdit(act) {
				act.inEdit = false;
				this.wannaEdit = 0;
				this.editPic = null;
				this.editTitle = '';
				this.editActivityTime = '';
				this.editLocation = '';
				this.editActType = 0;
				this.editRegistrationTime = '';
				this.editDeadlineTime = '';
				this.editAmount = 0;
				this.editMax = 0;
				this.editActContent = '';
				this.editNote = '';
			},
			//修改活動內容
			editActivity(act) {
				act.inEdit = false;
				let formData = new FormData();
				formData.append('UserId', this.loginUserId);
				formData.append('ActivityId', act.id);
				formData.append('Type', this.editActType);
				formData.append('Title', this.editTitle);
				formData.append('Content', this.editActContent);
				formData.append('Notes', this.editNote);
				formData.append('Amount', this.editAmount);
				formData.append('Max', this.editMax);
				formData.append('Location', this.editLocation);
				formData.append('RegistrationTime', this.editRegistrationTime);
				formData.append('DeadlineTime', this.editDeadlineTime);
				formData.append('ActivityTime', this.editActivityTime);
				formData.append('editPic', this.editPic);
				fetch(`api/personalActivities/EditActivity/${act.id}`, {
					method:'PUT',
					body: formData
				})
				.then(response => response.json())
				.then(data => {
					console.log('成功', data);
					act.inEdit = false;
					this.wannaEdit = 0;
					this.editPic = null;
					this.editTitle = '';
					this.editActivityTime = '';
					this.editLocation = '';
					this.editActType = 0;
					this.editRegistrationTime = '';
					this.editDeadlineTime = '';
					this.editAmount = 0;
					this.editMax = 0;
					this.editActContent = '';
					this.editNote = '';
					this.getCommingupList(this.loginUserId);
					this.getHostList(this.loginUserId);
				})
				.catch(err => {
					console.log('fetch edit activity failed!', err);
				})
			},
			//修改活動圖片預覽
			previewPic() {
				const allowType = "image.*";
				let file = event.target.files[0];
				if (file.type.match(allowType)) {
					var reader = new FileReader();
					reader.onload = function () {
						this.editPic = this.result;
						let blob = new Blob([this.editPic], { type: "image/jpeg" });
						let uriCreator = window.URL || wondow.webkitURL;
						let imgUrl = uriCreator.createObjectURL(blob);
						$('.imgPreview').attr("src", imgUrl);
					};
					reader.readAsArrayBuffer(file);
					this.editPic = file
				} else {
					this.editPic = null;
					$('.imgPreview').attr("src", null);
				}
			},
			//移除選的圖片
			removeEditPic() {
				this.editPic = null;
				$('.imgPreview').attr("src", null);
			},
		},
		mounted() {
			this.getCommingupList(this.loginUserId);
			this.getHostList(this.loginUserId);
			this.getPastList(this.loginUserId);
			this.getActivityTypeList();
		},
	})
		.mount('#activityPlatform');
</script>