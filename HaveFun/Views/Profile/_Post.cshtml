<link href="~/assets/css/profile_poststyle.css" rel="stylesheet" />
<div class="tab-pane fade show active" id="gt1" role="tabpanel" aria-labelledby="gt1-tab">
    <div id="post">
        <div class="group__bottom--area group__bottom--memberactivity">
            <div class="group__bottom--body">
                <div class="group__bottom--allmedia">
                    <div class="media-wrapper">
                        <div class="tab-content" id="myTabContent2">
                            <div class="tab-pane fade show active" id="Personal" role="tabpanel" aria-labelledby="Personal-tab">
                                @* 發送貼文 *@
                                <div class="create-post mb-4">
                                    <div class="lab-inner">
                                        <div class="lab-thumb">
                                            <div class="thumb-inner">
                                                <div class="thumb-img">
                                                    <img src="assets/images/member/profile/profile.jpg" alt="datting thumb">
                                                </div>
                                                <div class="thumb-content">
                                                    <h6><a href="#">William Smith</a></h6>
                                                    <div class="custom-select">
                                                        <select v-model="postPrivacy">
                                                            <option value="Public"> Public</option>
                                                            <option value="Private"> Private</option>
                                                            <option value="Friends"> Friends</option>
                                                        </select>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="lab-content">
                                            <form class="post-form">
                                                @* <input v-model="postContent" type="text" placeholder="Whats on your mind, William?"> *@
                                                <textarea v-model="postContent" placeholder="What's on your mind, William?" rows="4"></textarea>
                                                <div class="content-type">
                                                    <ul class="content-list">
                                                        <li class="text"><a href="#"><i class="fa-solid fa-pen-to-square"></i>Text</a></li>
                                                        <li class="image-video">
                                                            <div class="file-btn"><i class="fa-solid fa-camera"></i>Photo/Videos</div>
                                                            <input type="file" @@change.prevent="handleFileUpload">
                                                        </li>
                                                        <li class="attach-file">
                                                            <div class="file-btn"><i class="fa-solid fa-link"></i>Attach File</div>
                                                            <input type="file" @@change.prevent="handleFileUpload">
                                                        </li>
                                                        <li class="post-submit">
                                                            <button @@click.prevent="addPost" class="default-btn">Post</button>
                                                        </li>
                                                    </ul>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>

                                @* 顯示貼文 *@
                                <div v-for="post in posts" :key="post.id" class="post-item mb-4">
                                    @* 貼文內容 *@
                                    <div class="post-content">
                                        <div class="post-author">
                                            <div class="post-author-inner">
                                                <div class="author-thumb">
                                                    <img src="assets/images/member/profile/member1.jpg" alt="datting thumb">
                                                </div>
                                                <div class="author-details">
                                                    <h6><a href="#">{{ post.UserName }}</a></h6>
                                                    <ul class="post-status">
                                                        <li class="post-privacy"><i class="icofont-world"></i>{{postPrivacy}}</li>
                                                        <li class="post-time">{{post.Time}}</li>
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="post-description">
                                            <p>{{ post.Contents }}</p>
                                        </div>
                                    </div>
                                    @* 貼文功能按鈕 *@
                                    <div class="post-meta">
                                        <div class="post-meta-top">
                                            <p><a href="#"><i class="fa-solid fa-thumbs-up"></i> <i class="fa-solid fa-heart"></i> <i class="fa-solid fa-face-laugh"></i> <span>Julia, Petrova and 306 like this</span></a></p>
                                            <p><a href="#" @@click.prevent="showCommentsAlert">Show Comments</a></p>
                                        </div>
                                        <div class="post-meta-bottom">
                                            <ul class="react-list">
                                                <li class="react"><a href="#" @@click.prevent="likePost"><i class="fa-solid fa-thumbs-up"></i>Like</a></li>
                                                <li class="react"><a href="#" @@click.prevent="commentOnPost(post)"><i class="fa-solid fa-comment"></i>Comment</a></li>
                                                <li class="react"><a href="#"><i class="fa-solid fa-share-nodes"></i>Share</a></li>
                                            </ul>
                                        </div>
                                    </div>
                                    @* 貼文回覆 *@
                                    <div v-show="post.showComments" class="comments">
                                        <ul class="lab-ul comment-list">
                                            <li class="comment" v-for="reply in post.Replies" :key="reply.Id">
                                                <div class="com-item">
                                                    <div class="com-thumb">
                                                        <img alt="" src="assets/images/member/profile/member1.jpg">
                                                    </div>
                                                    <div class="com-content">
                                                        <div class="com-title">
                                                            <div class="com-title-meta">
                                                                <a href="#">{{reply.UserName}}</a>
                                                                <span> || {{reply.Time}}</span>
                                                            </div>
                                                            <span class="reply">
                                                                <a class="comment-reply-link" href="#" @@click.prevent="toggleNestedReplyForm(post.Id, reply.Id)"><i class="icofont-reply-all"></i>Reply</a>
                                                            </span>
                                                        </div>
                                                        <div class="post-description">
                                                            <p>{{ reply.Content }}</p>
                                                        </div>
                                                    </div>
                                                </div>
                                                @* 回覆的回覆 *@
                                                <ul class="lab-ul comment-list">
                                                    <li class="comment" v-for="nestedReply in reply.nestedReplies" :key="nestedReply.Id">
                                                        <div class="com-thumb">
                                                            <img alt="" src="assets/images/blog/author/03.jpg">
                                                        </div>
                                                        <div class="com-content">
                                                            <div class="com-title">
                                                                <div class="com-title-meta">
                                                                    <a href="#">{{ nestedReply.UserName }}</a>
                                                                    <span> || {{nestedReply.Time}} </span>
                                                                </div>
                                                            </div>
                                                            <div class="post-description">
                                                                <p>{{ nestedReply.Content}}</p>
                                                            </div>
                                                        </div>
                                                    </li>
                                                </ul>
                                                <div v-if="reply.showNestedForm" class="nested-reply-form">
                                                    @* <input type="text" v-model="reply.nestedReplyContent" class="nested-reply-input" placeholder="Write a reply..."> *@
                                                    <textarea v-model="reply.nestedReplyContent"
                                                              :class="`nested-reply-input nested-reply-input-${reply.Id}`"
                                                              placeholder="Write a reply..."
                                                              @@keydown.enter="handleEnter"
                                                              @@blur="resetTextarea('nested-reply-input')">
                                                    </textarea>
                                                    <button class="nested-reply-submit-button" @@click.prevent="addNestedReply(post.Id, reply.Id)">Reply</button>
                                                </div>
                                            </li>
                                        </ul>
                                        <div v-if="post.showReplyForm" class="reply-form">
                                            <textarea v-model="post.newReply"
                                                      :class="`reply-input reply-input-${post.Id}`"
                                                      placeholder="Write a reply..."
                                                      @@keydown.enter="handleEnter"
                                                      @@blur="resetTextarea('reply-input')">
                                            </textarea>
                                            <button class="btn-reply" @@click.prevent="addReply(post.Id)">Post Reply</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script>
    const post = Vue.createApp({
        data() {
            return {
                postContent: '',
                postPrivacy: 'Public',
                posts: [],
                postIdCounter: 1,
                userName: '',
                userId: 2 // 假設使用者ID為2
            };
        },
        created() {
            this.getPosts();
        },
        methods: {
            // 查詢貼文
            async getPosts() {
                try {
                    const response = await axios.get('/api/Profile/GetPostsList');
                    this.posts = response.data.map(post => ({
                        Id: post.id,
                        UserId: post.userId,
                        UserName: post.userName,
                        Contents: post.contents,
                        Time: post.time,
                        Pictures: post.pictures,
                        Replies: (post.replies || []).map(reply => ({
                            Id: reply.id,
                            UserId: reply.userId,
                            UserName: reply.userName,
                            PostId: reply.postId,
                            ParentCommentId: reply.parentCommentId,
                            Content: reply.contents,
                            Time: reply.time,
                            nestedReplies: (reply.nestedReplies || []).map(nestedReply => ({
                                Id: nestedReply.id,
                                UserId: nestedReply.userId,
                                UserName: nestedReply.userName,
                                PostId: nestedReply.postId,
                                ParentCommentId: nestedReply.parentCommentId,
                                Content: nestedReply.contents,
                                Time: nestedReply.time
                            })),
                            showNestedForm: false,
                            nestedReplyContent: ''
                        })),
                        showComments: false,
                        showReplyForm: false,
                        newReply: ''
                    }));
                } catch (error) {
                    console.error('Error getPosts:', error);
                }
            },

            // 發佈貼文
            async addPost() {
                if (this.postContent.trim() === '') {
                    alert('貼文不可空白');
                    return;
                } else if (this.postContent.trim().length > 2000) {
                    alert('貼文字數不可超過2000字');
                    return;
                }

                const newPost = {
                    UserId: this.userId,
                    UserName: this.userName,
                    Contents: this.postContent,
                    Time: '',
                    Pictures: '',
                    Replies: []
                };

                try {
                    const response = await axios.post('/api/Profile/AddPost', newPost);
                    const createdPost = response.data;
                    this.posts.unshift({
                        Id: createdPost.id,
                        UserId: createdPost.userId,
                        UserName: createdPost.userName,
                        Contents: createdPost.contents,
                        Time: createdPost.time,
                        Pictures: createdPost.pictures,
                        Replies: createdPost.replies || [],
                        showComments: false,
                        showReplyForm: false,
                        newReply: ''
                    });

                    this.postContent = '';
                } catch (error) {
                    console.error('Error addPost:', error);
                }
            },

            // 貼文回覆
            async addReply(PostId) {
                const post = this.posts.find(p => p.Id === PostId);

                if (post.newReply.trim() == '') {
                    alert('回覆不可空白');
                    return;
                } else if (post.newReply.trim().length > 280) {
                    alert('回覆字數不可超過280字');
                    return;
                }

                if (post) {
                    const newReply = {
                        UserId: this.userId,
                        UserName: this.userName,
                        PostId: PostId,
                        Contents: post.newReply,
                        Time: '',
                        ParentCommentId: null, // 貼文回覆ID
                        NestedReplies: []
                    };

                    try {
                        const response = await axios.post('/api/Profile/AddComment', newReply);
                        const createdReply = response.data;

                        post.Replies.push({
                            Id: createdReply.id,
                            UserId: createdReply.userId,
                            UserName: createdReply.userName,
                            PostId: createdReply.postId,
                            ParentCommentId: createdReply.parentCommentId,
                            Content: createdReply.contents,
                            Time: createdReply.time,
                            showNestedForm: false,
                            nestedReplyContent: '',
                            nestedReplies: []
                        });
                        post.newReply = '';
                        post.showComments = true;
                        this.resetTextarea('reply-input'); // 重置 newReply textarea高度
                    } catch (error) {
                        console.error('Error addReply:', error);
                    }
                }
            },

            // 貼文回覆的回覆
            async addNestedReply(PostId, replyId) {
                const post = this.posts.find(p => p.Id === PostId);
                if (post) {
                    const reply = post.Replies.find(r => r.Id === replyId);

                    if (reply.nestedReplyContent.trim() == '') {
                        alert('回覆不可空白');
                        return;
                    } else if (reply.nestedReplyContent.trim().length > 280) {
                        alert('回覆字數不可超過280字');
                        return;
                    }

                    if (reply && reply.nestedReplyContent.trim()) {
                        const newNestedReply = {
                            UserId: this.userId,
                            UserName: this.userName,
                            PostId: PostId,
                            Contents: reply.nestedReplyContent,
                            Time: '',
                            ParentCommentId: replyId, // 貼文回覆ID
                            NestedReplies: []
                        };

                        try {
                            const response = await axios.post('/api/Profile/AddComment', newNestedReply);
                            const createdNestedReply = response.data;

                            reply.nestedReplies.push({
                                Id: createdNestedReply.id,
                                UserId: createdNestedReply.userId,
                                UserName: createdNestedReply.userName,
                                PostId: createdNestedReply.postId,
                                ParentCommentId: createdNestedReply.parentCommentId,
                                Content: createdNestedReply.contents,
                                Time: createdNestedReply.time,
                                showNestedForm: false,
                                nestedReplyContent: ''
                            });
                            reply.nestedReplyContent = '';
                            reply.showNestedForm = false;
                            this.resetTextarea('nested-reply-input'); // 重置 newReply textarea高度
                        } catch (error) {
                            console.error('Error addNestedReply:', error);
                        }
                    }
                }
            },

            handleFileUpload(event) {
                const files = event.target.files;
                console.log(files);
            },
            showCommentsAlert(post) {
                alert("Show Comments");
            },

            // 顯示/隱藏 回覆內容與輸入框
            commentOnPost(post) {
                post.showReplyForm = !post.showReplyForm;
                post.showComments = post.showReplyForm;

                this.$nextTick(() => {
                    const textarea = document.querySelector(`.reply-input-${post.Id}`);
                    if (textarea) {
                        textarea.focus(); // 聚焦到 reply-input
                    }
                });
            },
            likePost(post) {
                alert('Liked!');
            },

            // 顯示/隱藏 貼文回覆的回覆輸入框 
            toggleNestedReplyForm(PostId, replyId) {
                const post = this.posts.find(p => p.Id === PostId);
                if (post) {
                    const reply = post.Replies.find(r => r.Id === replyId);
                    if (reply) {
                        reply.showNestedForm = !reply.showNestedForm;
                    }
                }

                this.$nextTick(() => {
                    const textarea = document.querySelector(`.nested-reply-input-${replyId}`)
                    if (textarea) {
                        textarea.focus(); // 聚焦到 nested-reply-input
                    }
                });
            },

            // 調整高度
            autoResize(event) {
                const textarea = event.target;
                textarea.style.height = 'auto'; // 設定行高自動依內文調整
                const scrollHeight = textarea.scrollHeight;
                textarea.style.height = `${Math.min(scrollHeight, 72)}px`; // 設定行高最多三行(一行24px)、Math.min(a,b) a<b return a 、a>b return b
            },

            // Enter事件
            handleEnter(event) {
                const textarea = event.target;
                if (event.key === 'Enter') {
                    event.preventDefault(); 
                    const start = textarea.selectionStart;
                    const end = textarea.selectionEnd;
                    const value = textarea.value;
                    textarea.value = value.substring(0, start) + '\n' + value.substring(end);
                    textarea.selectionStart = textarea.selectionEnd = start + 1;
                    this.autoResize(event); // 调整高度
                }
            },
            resetTextarea(name) {
                const textarea = document.querySelector(`.${name}`);
                textarea.value = "";
                textarea.style.height = '24px'; // 初始化原始高度
            }
        }
    }).mount('#post');
</script>
