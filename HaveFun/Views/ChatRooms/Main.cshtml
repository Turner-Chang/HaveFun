
<link href="~/css/chat.css" rel="stylesheet" />
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.5/signalr.min.js"></script>

<div id="appc">
    <div class="container">
        <div class="row clearfix">
            <div class="col-lg-12">
                <div class="card chat-app">
                    <div id="plist" class="people-list">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-search"></i></span>
                            </div>
                            <input type="text" class="form-control" placeholder="Search...">
                        </div>
                        <ul class="list-unstyled chat-list mt-2 mb-0">
                            <li class="clearfix">
                                <img src="https://bootdey.com/img/Content/avatar/avatar1.png" alt="avatar">
                                <div class="about">
                                    <div class="name">Vincent Porter</div>
                                    <div class="status"> <i class="fa fa-circle offline"></i> left 7 mins ago </div>
                                </div>
                            </li>
                            <li class="clearfix active">
                                <img src="https://bootdey.com/img/Content/avatar/avatar2.png" alt="avatar">
                                <div class="about">
                                    <div class="name">Aiden Chavez</div>
                                    <div class="status"> <i class="fa fa-circle online"></i> online </div>
                                </div>
                            </li>
                            <li class="clearfix">
                                <img src="https://bootdey.com/img/Content/avatar/avatar3.png" alt="avatar">
                                <div class="about">
                                    <div class="name">Mike Thomas</div>
                                    <div class="status"> <i class="fa fa-circle online"></i> online </div>
                                </div>
                            </li>
                            <li class="clearfix">
                                <img src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="avatar">
                                <div class="about">
                                    <div class="name">Christian Kelly</div>
                                    <div class="status"> <i class="fa fa-circle offline"></i> left 10 hours ago </div>
                                </div>
                            </li>
                            <li class="clearfix">
                                <img src="https://bootdey.com/img/Content/avatar/avatar8.png" alt="avatar">
                                <div class="about">
                                    <div class="name">Monica Ward</div>
                                    <div class="status"> <i class="fa fa-circle online"></i> online </div>
                                </div>
                            </li>
                            <li class="clearfix">
                                <img src="https://bootdey.com/img/Content/avatar/avatar3.png" alt="avatar">
                                <div class="about">
                                    <div class="name">Dean Henry</div>
                                    <div class="status"> <i class="fa fa-circle offline"></i> offline since Oct 28 </div>
                                </div>
                            </li>
                        </ul>
                    </div>
                    <div class="chat">
                        <div class="chat-header clearfix">
                            <div class="row">
                                <div class="col-lg-6">
                                    <a href="javascript:void(0);" data-toggle="modal" data-target="#view_info">
                                        <img src="/api/UserInfo/GetPicture/2" alt="avatar">
                                    </a>
                                    <div class="chat-about">
                                        <h6 class="m-b-0"></h6>
                                        <small>Last seen: 2 hours ago</small>
                                    </div>
                                </div>
                                <div class="col-lg-6 hidden-sm text-right">
                                    <a href="javascript:void(0);" class="btn btn-outline-secondary"><i class="fa fa-camera"></i></a>
                                    <a href="javascript:void(0);" class="btn btn-outline-primary"><i class="fa fa-image"></i></a>
                                    <a href="javascript:void(0);" class="btn btn-outline-info"><i class="fa fa-cogs"></i></a>
                                    <a href="javascript:void(0);" class="btn btn-outline-warning"><i class="fa fa-question"></i></a>
                                </div>
                            </div>
                        </div>
                        <div class="chat-history">
                            <ul class="m-b-0">
                                <li class="clearfix">
                                    <div class="message-data text-right">
                                        <span class="message-data-time">10:10 AM, Today</span>
                                        <img src="https://localhost:7152/api/UserInfo/GetPicture/2" alt="avatar">
                                    </div>
                                    <div class="message other-message float-right"> Hi Aiden, how are you? How is the project coming along? </div>
                                </li>
                                <li class="clearfix">
                                    <div class="message-data">
                                        <span class="message-data-time">10:12 AM, Today</span>
                                    </div>
                                    <div class="message my-message">Are we meeting today?</div>
                                </li>
                                <li class="clearfix">
                                    <div class="message-data">
                                        <span class="message-data-time">10:15 AM, Today</span>
                                    </div>
                                    <div class="message my-message">Project has been already finished and I have results to show you.</div>
                                </li>
                            </ul>
                        </div>
                        <div class="chat-message clearfix">
                            <div class="input-group mb-0">
                                <div class="input-group-prepend">
                                    <span id="sendButton" class="input-group-text"><i class="fa fa-send"></i></span>
                                </div>
                                <input type="text" id="messageInput" class="form-control" placeholder="Enter text here...">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{  <script>
    // 定義全域變量
           let chatHistory = [];
           window.currentUserId = 1; // 預設值
           window.otherUserId = 2;   // 預設值
           window.updateUserIds = updateUserIds;
           function updateUserIds(newCurrentUserId, newOtherUserId) {
               window.currentUserId = newCurrentUserId;
               window.otherUserId = newOtherUserId;
               fetchChatHistory(); // 重新加載聊天歷史
               console.log(`User IDs updated. Current User: ${window.currentUserId}, Other User: ${window.otherUserId}`);
           }
           // 更新聊天歷史的函數
           function updateChatHistory() {
               const chatHistoryContainer = document.querySelector('.chat-history ul');
               chatHistoryContainer.innerHTML = '';
               chatHistory.sort((a, b) => new Date(a.time) - new Date(b.time)).forEach(chat => {
                   const chatItem = document.createElement('li');
                   chatItem.className = 'clearfix';
                   chatItem.innerHTML = `
                       <div class="message-data ${chat.type === 'my' ? 'text-right' : ''}">
                           <span class="message-data-time">${chat.time}</span>
                           ${chat.img ? `<img src="${chat.img}" alt="avatar">` : ''}
                       </div>
                       <div class="message ${chat.type === 'my' ? 'my-message' : 'other-message float-right'}">
                           ${chat.message}
                       </div>
                   `;
                   chatHistoryContainer.appendChild(chatItem);
               });
           }

           // 使用 axios 獲取聊天歷史
           async function fetchChatHistory() {
               try {
                   const [response1, response2] = await Promise.all([
                       axios.get(`/api/ChatRoom/ChatRoomsApi/GetByUser1IdAndUser2Id/${window.otherUserId}/${window.currentUserId}`),
                       axios.get(`/api/ChatRoom/ChatRoomsApi/GetByUser1IdAndUser2Id/${window.currentUserId}/${window.otherUserId}`)
                   ]);

                   const processMessages = (data, isOther) => data.map(message => ({
                       time: moment(message.createTime).format("h:mm A, MMMM D"),
                       img: `/api/UserInfo/GetPicture/${message.user1Id}`,
                       message: message.messageText,
                       type: isOther ? "other" : "my"
                   }));

                   chatHistory = [
                       ...processMessages(response1.data, true),
                       ...processMessages(response2.data, false)
                   ];

                   updateChatHistory();
               } catch (error) {
                   console.error('獲取聊天歷史時出錯:', error);
               }
           }

           // SignalR 連接設置
           const connection = new signalR.HubConnectionBuilder()
               .withUrl("/chatHub")
               .build();

           connection.on("ReceiveMessage", function (user, message) {
               // 只有當消息不是來自當前用戶時才添加
               if (user != window.currentUserId) {
                   const chat = {
                       time: moment().format("h:mm A, MMMM D"),
                       img: `/api/UserInfo/GetPicture/${window.otherUserId}`,
                       message: message,
                       type: "other"
                   };
                   chatHistory.push(chat);
                   updateChatHistory();
               }
           });

           connection.on("SomeOneOnline", (connid) => {
               console.log(`有人連接，ID: ${connid}`);
           });

           connection.on("SomeOneOffline", (connid) => {
               console.log(`有人斷開連接，ID: ${connid}`);
           });

           connection.start().catch(err => console.error(err.toString()));

           // 發送消息
           document.getElementById("sendButton").addEventListener("click", async (event) => {
               event.preventDefault();
               const messageText = document.getElementById("messageInput").value.trim();
               if (!messageText) return;

               // 立即將消息添加到聊天歷史
               const newChat = {
                   time: moment().format("h:mm A, MMMM D"),
                   img: `/api/UserInfo/GetPicture/${window.currentUserId}`,
                   message: messageText,
                   type: "my"
               };
               chatHistory.push(newChat);
               updateChatHistory();

               try {
                   // 發送消息到 SignalR hub
                   await connection.invoke("SendMessage", currentUserId.toString(), messageText);

                   // 發送 POST 請求保存消息
                   const response = await axios.post('/api/ChatRoom/ChatRoomsApi', {
                       User1Id: window.currentUserId,
                       User2Id: window.otherUserId,
                       MessageText: messageText,
                       CreateTime: new Date(),
                       IsRead: false
                   });

                   console.log('消息已保存:', response.data);

                   // 清空輸入框
                   document.getElementById("messageInput").value = '';
               } catch (error) {
                   console.error('發送/保存消息時出錯:', error);
               }
           });

           // 初始化
           fetchChatHistory();
    </script>
}

    