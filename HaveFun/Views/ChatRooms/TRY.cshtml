
<link href="~/css/chat.css" rel="stylesheet" />
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.5/signalr.min.js"></script>

<div id="appc">
    <div class="container">
        <div class="row clearfix">
            <div class="col-lg-12">
                <div class="card chat-app">
                    <div id="plist" class="people-list">
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fa fa-search"></i></span>
                            </div>
                            <input type="text" class="form-control" placeholder="Search...">
                        </div>
                        <ul class="list-unstyled chat-list mt-2 mb-0">
                            <li class="clearfix">
                                <img src="https://bootdey.com/img/Content/avatar/avatar1.png" alt="avatar">
                                <div class="about">
                                    <div class="name">Vincent Porter</div>
                                    <div class="status"> <i class="fa fa-circle offline"></i> left 7 mins ago </div>
                                </div>
                            </li>
                            <li class="clearfix active">
                                <img src="https://bootdey.com/img/Content/avatar/avatar2.png" alt="avatar">
                                <div class="about">
                                    <div class="name">Aiden Chavez</div>
                                    <div class="status"> <i class="fa fa-circle online"></i> online </div>
                                </div>
                            </li>
                            <li class="clearfix">
                                <img src="https://bootdey.com/img/Content/avatar/avatar3.png" alt="avatar">
                                <div class="about">
                                    <div class="name">Mike Thomas</div>
                                    <div class="status"> <i class="fa fa-circle online"></i> online </div>
                                </div>
                            </li>
                            <li class="clearfix">
                                <img src="https://bootdey.com/img/Content/avatar/avatar7.png" alt="avatar">
                                <div class="about">
                                    <div class="name">Christian Kelly</div>
                                    <div class="status"> <i class="fa fa-circle offline"></i> left 10 hours ago </div>
                                </div>
                            </li>
                            <li class="clearfix">
                                <img src="https://bootdey.com/img/Content/avatar/avatar8.png" alt="avatar">
                                <div class="about">
                                    <div class="name">Monica Ward</div>
                                    <div class="status"> <i class="fa fa-circle online"></i> online </div>
                                </div>
                            </li>
                            <li class="clearfix">
                                <img src="https://bootdey.com/img/Content/avatar/avatar3.png" alt="avatar">
                                <div class="about">
                                    <div class="name">Dean Henry</div>
                                    <div class="status"> <i class="fa fa-circle offline"></i> offline since Oct 28 </div>
                                </div>
                            </li>
                        </ul>
                    </div>
                    <div class="chat">
                        <div class="chat-header clearfix">
                            <div class="row">
                                <div class="col-lg-6">
                                    <a href="javascript:void(0);" data-toggle="modal" data-target="#view_info">
                                        <img src="/api/UserInfo/GetPicture/2" alt="avatar">
                                    </a>
                                    <div class="chat-about">
                                        <h6 class="m-b-0"></h6>
                                        <small>Last seen: 2 hours ago</small>
                                    </div>
                                </div>
                                <div class="col-lg-6 hidden-sm text-right">
                                    <a href="javascript:void(0);" class="btn btn-outline-secondary"><i class="fa fa-camera"></i></a>
                                    <a href="javascript:void(0);" class="btn btn-outline-primary"><i class="fa fa-image"></i></a>
                                    <a href="javascript:void(0);" class="btn btn-outline-info"><i class="fa fa-cogs"></i></a>
                                    <a href="javascript:void(0);" class="btn btn-outline-warning"><i class="fa fa-question"></i></a>
                                </div>
                            </div>
                        </div>
                        <div class="chat-history">
                            <ul class="m-b-0">
                                <li class="clearfix">
                                    <div class="message-data text-right">
                                        <span class="message-data-time">10:10 AM, Today</span>
                                        <img src="https://localhost:7152/api/UserInfo/GetPicture/2" alt="avatar">
                                    </div>
                                    <div class="message other-message float-right"> Hi Aiden, how are you? How is the project coming along? </div>
                                </li>
                                <li class="clearfix">
                                    <div class="message-data">
                                        <span class="message-data-time">10:12 AM, Today</span>
                                    </div>
                                    <div class="message my-message">Are we meeting today?</div>
                                </li>
                                <li class="clearfix">
                                    <div class="message-data">
                                        <span class="message-data-time">10:15 AM, Today</span>
                                    </div>
                                    <div class="message my-message">Project has been already finished and I have results to show you.</div>
                                </li>
                            </ul>
                        </div>
                        <div class="chat-message clearfix">
                            <div class="input-group mb-0">
                                <div class="input-group-prepend">
                                    <span id="sendButton" class="input-group-text"><i class="fa fa-send"></i></span>
                                </div>
                                <input type="text" id="messageInput" class="form-control" placeholder="Enter text here...">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{

    <script>
        var chatHistory = [];
        // Function to update chat history
        function updateChatHistory() {
            var chatHistoryContainer = document.querySelector('.chat-history ul');
            chatHistoryContainer.innerHTML = '';
            chatHistory.forEach(chat => {
                var chatItem = document.createElement('li');
                chatItem.className = 'clearfix';
                var chatContent = `
                <div class="message-data ${chat.type === 'my' ? 'text-right' : ''}">
                    <span class="message-data-time">${chat.time}</span>
                    ${chat.img ? `<img src="${chat.img}" alt="avatar">` : ''}
                </div>
                <div class="message ${chat.type === 'my' ? 'my-message' : 'other-message float-right'}">
                    ${chat.message}
                </div>
                           `;
                chatItem.innerHTML = chatContent;
                chatHistoryContainer.appendChild(chatItem);
            });
        }

        // Fetch chat history from API
        fetch('/api/ChatRoom/ChatRoomsApi/GetByUser1IdAndUser2Id/1/2')
            .then(response => response.json())
            .then(data => {
                data.forEach(message => {
                    const newChatMessage = {
                        time: moment(message.createTime).format("h:mm A, MMMM D"),
                        img: `/api/UserInfo/GetPicture/${message.user1Id}`,
                        message: message.messageText,
                        type: message.user1Id === 1 ? "other" : "my" // Set type based on user1Id
                    };
                    chatHistory.push(newChatMessage);
                });
                updateChatHistory();
            })
            .catch(error => console.error('Error fetching chat history:', error));

        fetch('/api/ChatRoom/ChatRoomsApi/GetByUser1IdAndUser2Id/2/1')
            .then(response => response.json())
            .then(data => {
                data.forEach(message => {
                    const newChatMessage = {
                        time: moment(message.createTime).format("h:mm A, MMMM D"),
                        img: `/api/UserInfo/GetPicture/${message.user1Id}`,
                        message: message.messageText,
                        type: message.user1Id === 2 ? "my" : "other" // Set type based on user1Id
                    };
                    chatHistory.push(newChatMessage);
                });
                updateChatHistory();
            })
            .catch(error => console.error('Error fetching chat history:', error));

        // Initial call to update chat history
        updateChatHistory();

        // SignalR connection setup
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        connection.on("ReceiveMessage", function (user, message) {
            const msg = message;
            const chat = {
                time: moment().format("h:mm A, MMMM D"),
                img: "/api/UserInfo/GetPicture/2",
                message: msg,
                type: "my"
            };
            chatHistory.push(chat);
            updateChatHistory();
        });

        connection.on("SomeOneOnline", (connid) => {
            console.log(`Someone connected with ID: ${connid}`);

        });


        connection.on("SomeOneOffline", (connid) => {
            console.log(`Someone disconnected with ID: ${connid}`);
        });

        connection.start().catch(err => console.error(err.toString()));

        document.getElementById("sendButton").addEventListener("click", event => {
            const user1Id = 2; // Replace with the current user's ID
            const user2Id = 1; // Replace with the recipient's ID
            const messageText = document.getElementById("messageInput").value;
            const user = "";
            const message = document.getElementById("messageInput").value;
            connection.invoke("SendMessage", user, message).catch(err => console.error(err.toString()));
            document.getElementById("messageInput").value = '';

            // Create data object for POST request
            const data = {
                User1Id: user1Id,
                User2Id: user2Id,
                MessageText: messageText,
                CreateTime: new Date(),
                IsRead: false
            };

            // Send POST request to the server
            fetch('/api/ChatRoom/ChatRoomsApi', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            })
                .then(response => {
                    if (response.ok) {
                        return response.text();
                    } else {
                        throw new Error('Network response was not ok.');
                    }
                })
                .then(responseText => {
                    console.log(responseText); // Handle server response (if needed)
                    document.getElementById("messageInput").value = ''; // Clear input field
                })
                .catch(error => {
                    console.error('Error saving message:', error);
                });
            event.preventDefault();
        });
    </script>
}

